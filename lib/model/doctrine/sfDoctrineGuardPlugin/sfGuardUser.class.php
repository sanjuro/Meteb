<?php

/**
 * sfGuardUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    meteb
 * @subpackage model
 * @author     Shadley Wentzel
 * @version    SVN: $Id: sfGuardUserClass.php 7490 2010-03-29 19:53:27Z swentzel $
 */
class sfGuardUser extends PluginsfGuardUser
{
	/**
	 * Function to fetch all the clients associated to a certain
	 * user this should only be for advisors or admisn
	 * 
	 * @param 
	 * @return UserProfile UserProfile Object
	 */	
	 public function getClientsForUser()
	 {
		 $q = Doctrine_Query::create()
		   ->from('UserProfile up')
		   ->leftJoin('up.sfGuardUser sgu')
		   ->leftJoin('sgu.sfGuardUserGroup sfug')
		   ->where('parent_user_id = ?', $this->getId())
		   ->andWhere('sfug.group_id = ?', 3);
		  
		return $q->execute(); 	
	 }
	 
	/**
	 * Function to fetch all the advisors associated to a certain
	 * user this should only be for advisors or admisn
	 * 
	 * @param 
	 * @return UserProfile UserProfile Object
	 */	
	 public function getAdvisorsForUser()
	 {
		 $q = Doctrine_Query::create()
		   ->from('UserProfile up')
		   ->leftJoin('up.sfGuardUser sgu')
		   ->leftJoin('sgu.sfGuardUserGroup sfug')
		   ->where('parent_user_id = ?', $this->getId())
		   ->andWhere('sfug.group_id = ?', 2);
		  
		return $q->execute(); 	
	 }
	 
	/**
	 * Function to fetch all the activtys associated to a certain
	 * user this should only be for advisors or admisn
	 * 
	 * @param 
	 * @return array All Activity Objects found
	 */	
	 public function getActivitysForUser()
	 {
		 $q = Doctrine_Query::create()
		   ->from('Activity a')
		   ->leftJoin('a.ActivityType at')
		   ->leftJoin('a.sfGuardUser sgu')
		   ->where('a.sfuser_id = ?', $this->getId());
		  
		return $q->execute(); 	
	 }
	 
	/**
	 * Function to fetch all the quotes associated to a certain
	 * user this should only be for advisors or admisn
	 * 
	 * @param 
	 * @return array All Quote Objects found
	 */	
	 public function getQuotesForUser()
	 {
		 $q = Doctrine_Query::create()
		   ->from('Quote q')
		   ->leftJoin('q.Client c')
		   ->where('q.client_id = ?', $this->getId());
		  
		return $q->execute(); 	
	 }
}