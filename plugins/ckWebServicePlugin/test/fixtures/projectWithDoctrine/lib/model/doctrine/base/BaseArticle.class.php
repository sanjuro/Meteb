<?php

/**
 * BaseArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property clob $content
 * @property Doctrine_Collection $Authors
 * @property Doctrine_Collection $Comments
 * 
 * @method string              getTitle()    Returns the current record's "title" value
 * @method clob                getContent()  Returns the current record's "content" value
 * @method Doctrine_Collection getAuthors()  Returns the current record's "Authors" collection
 * @method Doctrine_Collection getComments() Returns the current record's "Comments" collection
 * @method Article             setTitle()    Sets the current record's "title" value
 * @method Article             setContent()  Sets the current record's "content" value
 * @method Article             setAuthors()  Sets the current record's "Authors" collection
 * @method Article             setComments() Sets the current record's "Comments" collection
 * 
 * @package    projectWithDoctrine
 * @subpackage model
 * @author     Christian Kerl
 * @version    SVN: $Id: BaseArticle.class.php 26442 2010-01-10 00:21:58Z chrisk $
 */
abstract class BaseArticle extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('article');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('content', 'clob', null, array(
             'type' => 'clob',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Author as Authors', array(
             'refClass' => 'ArticleAuthor',
             'local' => 'author_id',
             'foreign' => 'article_id'));

        $this->hasMany('Comment as Comments', array(
             'local' => 'id',
             'foreign' => 'article_id'));
    }
}